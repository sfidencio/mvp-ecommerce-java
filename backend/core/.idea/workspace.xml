<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="09ca9a23-662d-47bb-9b9b-feb050ffbd41" name="Changes" comment="feat(product/category): create endpoint category and product">
      <change beforePath="$PROJECT_DIR$/.idea/encodings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/http-client.cookies" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/httpRequests/http-client.cookies" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/http-requests-log.http" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/httpRequests/http-requests-log.http" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Dockerfile-config-service" beforeDir="false" afterPath="$PROJECT_DIR$/Dockerfile-config-service" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Dockerfile-discovery-service" beforeDir="false" afterPath="$PROJECT_DIR$/Dockerfile-discovery-service" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Dockerfile-gateway-service" beforeDir="false" afterPath="$PROJECT_DIR$/Dockerfile-gateway-service" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Dockerfile-product-service" beforeDir="false" afterPath="$PROJECT_DIR$/Dockerfile-product-service" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/TODO.md" beforeDir="false" afterPath="$PROJECT_DIR$/TODO.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/Dockerfile-core.template" beforeDir="false" afterPath="$PROJECT_DIR$/docs/Dockerfile-core.template" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/docker-compose.txt" beforeDir="false" afterPath="$PROJECT_DIR$/docs/docker-compose.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/adapter/input/CategoryResource.java" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/adapter/input/CategoryResource.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/adapter/input/ICategoryResource.java" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/adapter/input/ICategoryResource.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/adapter/input/IProductResource.java" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/adapter/input/IProductResource.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/adapter/input/ProductResource.java" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/adapter/input/ProductResource.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/adapter/output/database/ProductPersistence.java" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/adapter/output/database/ProductPersistence.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/adapter/output/database/entities/ProductEntity.java" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/adapter/output/database/entities/ProductEntity.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/adapter/output/mappers/IProductInfraMapper.java" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/adapter/output/mappers/IProductInfraMapper.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/adapter/output/mappers/ProductInfraMapper.java" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/adapter/output/mappers/ProductInfraMapper.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/application/dto/CreateCategoryRequest.java" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/application/dto/CreateCategoryRequest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/application/dto/CreateProductCategoryRequest.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/application/mappers/IProductApplicationMapper.java" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/application/mappers/IProductApplicationMapper.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/application/mappers/ProductApplicatonMapper.java" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/application/mappers/ProductApplicatonMapper.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/application/usecases/CreateCommonUseCase.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/ports/input/ICreateCommonUseCase.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/ports/output/ICreateProductPort.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../profiles/product-service.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/../../profiles/product-service.yaml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeInsightWorkspaceSettings">
    <option name="optimizeImportsOnTheFly" value="true" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Record" />
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/../.." />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;sfidencio&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;git@github.com:sfidencio/mvp-ecommerce-java.git&quot;,
    &quot;accountId&quot;: &quot;a0607a2a-dedb-4693-8fec-77d3c5e2f76c&quot;
  }
}</component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="true" />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2rttv6KPB2pUWc8sWZ8a8dsW7Xk" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.ConfigServiceApplication.executor": "Debug",
    "Application.DiscoveryServiceApplication.executor": "Debug",
    "Application.ProductServiceApplication.executor": "Debug",
    "Docker.Dockerfile-core.executor": "Run",
    "Docker.Dockerfile.executor": "Run",
    "Docker.discovery-service/Dockerfile.executor": "Run",
    "Docker.docker-compose.yaml.config-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.core: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.discovery-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.gateway-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.keycloak: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.mongo-express: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.mongodb: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.postgres: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.product-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml: Compose Deployment.executor": "Run",
    "Docker.docker/Dockerfile (1).executor": "Run",
    "Docker.docker/Dockerfile.executor": "Run",
    "HTTP Request.generated-requests | #1.executor": "Run",
    "Maven.config-service [org.springframework.boot:spring-boot-maven-plugin:3.4.1:run].executor": "Run",
    "Maven.core [-pl,discovery-service...].executor": "Run",
    "Maven.core [-pl,gateway-service,springboot:run].executor": "Run",
    "Maven.core [-pl,product-service...].executor": "Run",
    "Maven.core [clean,install].executor": "Run",
    "Maven.core [clean].executor": "Run",
    "Maven.core [compile].executor": "Run",
    "Maven.core [install].executor": "Run",
    "Maven.core [package].executor": "Run",
    "Maven.core [spring-boot:run].executor": "Run",
    "Maven.core [verify].executor": "Run",
    "Maven.discovery-service [clean].executor": "Run",
    "Maven.discovery-service [org.apache.maven.plugins:maven-jar-plugin:3.4.1:jar].executor": "Run",
    "Maven.discovery-service [org.springframework.boot:spring-boot-maven-plugin:3.4.1:run].executor": "Run",
    "Maven.discovery-service [package].executor": "Run",
    "Maven.product-service [compile].executor": "Run",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "RequestMappingsPanelOrder0": "0",
    "RequestMappingsPanelOrder1": "1",
    "RequestMappingsPanelWidth0": "75",
    "RequestMappingsPanelWidth1": "75",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "Spring Boot.ConfigServiceApplication.executor": "Run",
    "Spring Boot.DiscoveryServiceApplication.executor": "Run",
    "Spring Boot.GatewayServiceApplication.executor": "Run",
    "Spring Boot.ProductServiceApplication.executor": "Run",
    "git-widget-placeholder": "<unknown>",
    "go.import.settings.migrated": "true",
    "ignore.virus.scanning.warn.message": "true",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "C:/Users/sofp/Documents/projetos/mvp-ecommerce-java/backend/core/product-service/src/main/resources",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Project",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.0",
    "run.configurations.included.in.services": "true",
    "settings.editor.selected.configurable": "org.jetbrains.plugins.github.ui.GithubSettingsConfigurable",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="com.github.sfidencio.adapter.output.database" />
      <recent name="com.github.sfidencio.domain.entities" />
      <recent name="com.github.sfidencio.ports.input" />
      <recent name="com.github.sfidencio.adapter.input" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\sofp\Documents\projetos\mvp-ecommerce-java\backend\core\product-service\src\main\resources" />
      <recent name="C:\Users\sofp\Documents\projetos\mvp-ecommerce-java\backend\core" />
      <recent name="C:\Users\sofp\Documents\projetos\mvp-ecommerce-java\backend\core\docs" />
      <recent name="C:\Users\sofp\Documents\projetos\mvp-ecommerce-java\backend\core\config-service" />
      <recent name="C:\Users\sofp\Documents\projetos\mvp-ecommerce-java\backend\core\discovery-service" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\sofp\Documents\projetos\mvp-ecommerce-java\backend\core\discovery-service" />
      <recent name="C:\Users\sofp\Documents\projetos\mvp-ecommerce-java\backend\core" />
      <recent name="C:\Users\sofp\Documents\projetos\mvp-ecommerce-java\backend\core\docker" />
      <recent name="C:\Users\sofp\Documents\projetos\mvp-ecommerce-java\backend\core\product-service" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="com.github.sfidencio.ports.output" />
      <recent name="com.github.sfidencio.ports.input" />
      <recent name="com.github.sfidencio.adapter.output.database.repository" />
      <recent name="com.github.sfidencio.adapter.output.mappers" />
      <recent name="com.github.sfidencio.adapter.output.database.entities" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="KtorApplicationConfigurationType" />
        <option value="MicronautRunConfigurationType" />
        <option value="QuarkusRunConfigurationType" />
        <option value="SpringBootApplicationConfigurationType" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Application.ProductServiceApplication">
    <configuration name="ConfigServiceApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.github.sfidencio.ConfigServiceApplication" />
      <module name="config-service" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.github.sfidencio.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="DiscoveryServiceApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.github.sfidencio.DiscoveryServiceApplication" />
      <module name="discovery-service" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.github.sfidencio.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProductServiceApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.github.sfidencio.ProductServiceApplication" />
      <module name="product-service" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.github.sfidencio.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-image" temporary="true">
      <deployment type="docker-image">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml.mongo-express: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="mongo-express" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml.mongodb: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="mongodb" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.ProductServiceApplication" />
        <item itemvalue="Docker.docker-compose.yaml.mongo-express: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yaml.mongodb: Compose Deployment" />
        <item itemvalue="Application.DiscoveryServiceApplication" />
        <item itemvalue="Application.ConfigServiceApplication" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="StructureViewState">
    <option name="selectedTab" value="Logical" />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="09ca9a23-662d-47bb-9b9b-feb050ffbd41" name="Changes" comment="" />
      <created>1737390426764</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1737390426764</updated>
      <workItem from="1737390428500" duration="7056000" />
      <workItem from="1737397536501" duration="799000" />
      <workItem from="1737404317255" duration="7608000" />
      <workItem from="1737463739549" duration="17567000" />
      <workItem from="1737564602877" duration="1478000" />
      <workItem from="1737568009384" duration="4922000" />
      <workItem from="1737576961467" duration="853000" />
      <workItem from="1737630064098" duration="5570000" />
      <workItem from="1737646205740" duration="3265000" />
      <workItem from="1737718404590" duration="15811000" />
      <workItem from="1737985499725" duration="7253000" />
      <workItem from="1738156213831" duration="9344000" />
      <workItem from="1738260777815" duration="1627000" />
      <workItem from="1738265609098" duration="1054000" />
      <workItem from="1738283700086" duration="11075000" />
      <workItem from="1738525724343" duration="3471000" />
      <workItem from="1738587393178" duration="869000" />
      <workItem from="1738670094271" duration="16329000" />
      <workItem from="1738694941861" duration="89000" />
      <workItem from="1738716242726" duration="8555000" />
      <workItem from="1738800052078" duration="3986000" />
      <workItem from="1738886740648" duration="2208000" />
      <workItem from="1739193663796" duration="2897000" />
      <workItem from="1739276561276" duration="1594000" />
      <workItem from="1739409660945" duration="889000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <ignored-roots>
      <path value="$PROJECT_DIR$/.." />
    </ignored-roots>
    <MESSAGE value="chore(docker): finalizado configurações compose" />
    <MESSAGE value="feat(product/category): create endpoint category and product" />
    <option name="LAST_COMMIT_MESSAGE" value="feat(product/category): create endpoint category and product" />
  </component>
  <component name="VgoProject">
    <integration-enabled>false</integration-enabled>
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/adapter/output/database/CategoryPersistence.java</url>
          <line>18</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/adapter/output/database/CategoryPersistence.java</url>
          <line>19</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/application/usecases/CreateCreateCategoryUseCase.java</url>
          <line>16</line>
          <option name="timeStamp" value="11" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>jar://$MAVEN_REPOSITORY$/org/modelmapper/modelmapper/3.1.1/modelmapper-3.1.1.jar!/org/modelmapper/ModelMapper.class</url>
          <line>207</line>
          <option name="timeStamp" value="15" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>jar://$MAVEN_REPOSITORY$/org/modelmapper/modelmapper/3.1.1/modelmapper-3.1.1.jar!/org/modelmapper/ModelMapper.class</url>
          <line>206</line>
          <option name="timeStamp" value="16" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/adapter/input/CategoryResource.java</url>
          <line>19</line>
          <option name="timeStamp" value="21" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/adapter/output/database/ProductPersistence.java</url>
          <line>18</line>
          <option name="timeStamp" value="22" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/product-service/src/main/java/com/github/sfidencio/adapter/input/CategoryResource.java</url>
          <line>20</line>
          <option name="timeStamp" value="24" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>