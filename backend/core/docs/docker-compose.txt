services:
  core:
    build:
      context: .
      dockerfile: discovery-service/Dockerfile-service-discovery
      platforms:
        - linux/amd64
    image: core:latest

  discovery-service:
    build:
      context: discovery-service/docker
      dockerfile: discovery-service/Dockerfile-service-discovery
      platforms:
        - linux/amd64
    image: discovery-service:latest # Substitua pelo nome/imagem do serviço de descoberta
    container_name: discovery-service
    ports:
      - "8761:8761" # Porta típica do Eureka ou outro servidor de descoberta
    environment:
      - EUREKA_SERVER_HOST=discovery-service
      - EUREKA_SERVER_PORT=8761
      - EUREKA_SERVER_LOG_LEVEL=info
      - EUREKA_TYPE_PROTOCOL=https
    networks:
      - app-network
  
  config-service:
    build:
      context: config-service/docker
      dockerfile: discovery-service/Dockerfile-service-discovery
      platforms:
        - linux/amd64
    image: config-service:latest # Substitua pelo nome/imagem do config-service
    container_name: config-service
    ports:
      - "8080:8080" # Porta típica do Spring Cloud Config Server
    environment:
      - CONFIG_SERVER_HOST=config-service
      - CONFIG_SERVER_PORT=8080
      - EUREKA_SERVER_HOST=discovery-service # Define host do servidor de descoberta
      - EUREKA_SERVER_PORT=8761 # Define porta do servidor de descoberta
      - CONFIG_SERVER_HOST_GITHUB=https://github.com/sfidencio/mvp-ecommerce-java
      - CONFIG_SERVER_LOG_LEVEL=info
      - CONFIG_TYPE_PROTOCOL=https
    depends_on:
      - discovery-service
    networks:
      - app-network
        
  
  gateway-service:
    build:
      context: gateway-service/docker
      dockerfile: discovery-service/Dockerfile-service-discovery
      platforms:
        - linux/amd64
    image: gateway-service:latest # Substitua pelo nome/imagem do gateway-service
    container_name: gateway-service
    ports:
      - "8081:8081" # Porta típica de um API Gateway
    environment:
      - GATEWAY_SERVICE_HOST=gateway-service
      - GATEWAY_SERVICE_PORT=8081
      - GATEWAY_SERVER_LOG_LEVEL=info
      - GATEWAY_TYPE_PROTOCOL=https
    depends_on:
      - discovery-service
      - config-service
    networks:
      - app-network


  product-service:
    build:
      context: gateway-service/docker
      dockerfile: discovery-service/Dockerfile-service-discovery
      platforms:
        - linux/amd64
    image: product-service:latest # Substitua pelo nome/imagem do product-service
    container_name: product-service
    ports:
      - "8082:8082" # Porta para o serviço de produtos
    environment:
      - PRODUCT_SERVICE_HOST=product-service
      - PRODUCT_SERVICE_PORT=8082
      - EUREKA_SERVER_HOST=discovery-service # Define host do servidor de descoberta
      - EUREKA_SERVER_PORT=8761 # Define porta do servidor de descoberta
      - CONFIG_SERVER_HOST=config-service # Define host do servidor de configuração
      - CONFIG_SERVER_PORT=8080 # Define porta do servidor de configuração
      - PRODUCT_SERVER_LOG_LEVEL=info
    depends_on:
      - discovery-service
      - config-service
      - mongodb
    networks:
      - app-network
  
  mongodb:
    image: mongo:6.0 # Você pode ajustar a versão se necessário
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_SERVICE_HOST=mongodb
      - MONGO_SERVICE_PORT=27017
      - MONGO_SERVICE_DATABASE=productdb
      - MONGO_USER=admin
      - MONGO_PASSWORD=admin
    networks:
      - app-network
    volumes:
      - mongo-data:/data/db # Dados serão persistidos localmente 

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data: